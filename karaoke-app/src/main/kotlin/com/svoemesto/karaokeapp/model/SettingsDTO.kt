package com.svoemesto.karaokeapp.model

import java.io.Serializable
import java.util.*

data class SettingsDTO(
        val id: Long,
        var idPrevious: Long,
        var idNext: Long,
        var idLeft: Long,
        var idRight: Long,
        val rootFolder: String,
        val fileName: String,
        val idStatus: Long,
        val status: String,
        val tags: String,
        val color: String,
        val songName: String,
        val songNameCensored: String,
        val author: String,
        val album: String,
        val date: String,
        val time: String,
        val timecode: String,
        val dateTimePublish: Date?,
        val onAir: Boolean,
        val year: Long,
        val track: Long,
        val key: String,
        val bpm: Long,
        val ms: Long,
        val countVoices: Int,
        val firstSongInAlbum: Boolean,
        val flagBoosty: String,
        val flagSponsr: String,
        val flagVk: String,
        val flagDzenLyrics: String,
        val flagDzenKaraoke: String,
        val flagDzenChords: String,
        val flagDzenMelody: String,
        val flagVkLyrics: String,
        val flagVkKaraoke: String,
        val flagVkChords: String,
        val flagVkMelody: String,
        val flagTelegramLyrics: String,
        val flagTelegramKaraoke: String,
        val flagTelegramChords: String,
        val flagTelegramMelody: String,
        val flagPlLyrics: String,
        val flagPlKaraoke: String,
        val flagPlChords: String,
        val flagPlMelody: String,
        val processColorBoosty: String,
        val processColorSponsr: String,
        val processColorVk: String,
        val processColorMeltLyrics: String,
        val processColorMeltKaraoke: String,
        val processColorMeltChords: String,
        val processColorMeltMelody: String,
        val processColorDzenLyrics: String,
        val processColorDzenKaraoke: String,
        val processColorDzenChords: String,
        val processColorDzenMelody: String,
        val processColorVkLyrics: String,
        val processColorVkKaraoke: String,
        val processColorVkChords: String,
        val processColorVkMelody: String,
        val processColorTelegramLyrics: String,
        val processColorTelegramKaraoke: String,
        val processColorTelegramChords: String,
        val processColorTelegramMelody: String,
        val processColorPlLyrics: String,
        val processColorPlKaraoke: String,
        val processColorPlChords: String,
        val processColorPlMelody: String,
        val idBoosty: String,
        val idBoostyFiles: String,
        val idSponsr: String,
        val versionBoosty: Int,
        val versionBoostyFiles: Int,
        val versionSponsr: Int,
        val indexTabsVariant: Int,
        val idVk: String,
        val idDzenLyrics: String,
        val idDzenKaraoke: String,
        val idDzenChords: String,
        val idDzenMelody: String,
        val versionDzenLyrics: Int,
        val versionDzenKaraoke: Int,
        val versionDzenChords: Int,
        val versionDzenMelody: Int,
        val idVkLyrics: String,
        val idVkLyricsOID: String,
        val idVkLyricsID: String,
        val idVkKaraoke: String,
        val idVkKaraokeOID: String,
        val idVkKaraokeID: String,
        val idVkChords: String,
        val idVkChordsOID: String,
        val idVkChordsID: String,
        val idVkMelody: String,
        val idVkMelodyOID: String,
        val idVkMelodyID: String,
        val versionVkLyrics: Int,
        val versionVkKaraoke: Int,
        val versionVkChords: Int,
        val versionVkMelody: Int,
        val idTelegramLyrics: String,
        val idTelegramKaraoke: String,
        val idTelegramChords: String,
        val idTelegramMelody: String,
        val versionTelegramLyrics: Int,
        val versionTelegramKaraoke: Int,
        val versionTelegramChords: Int,
        val versionTelegramMelody: Int,
        val idPlLyrics: String,
        val idPlKaraoke: String,
        val idPlChords: String,
        val idPlMelody: String,
        val versionPlLyrics: Int,
        val versionPlKaraoke: Int,
        val versionPlChords: Int,
        val versionPlMelody: Int,
        val resultVersion: Long,
        val rate: Int
): Serializable, Comparable<SettingsDTO> {

    private val sortString: String get() {
        return if (dateTimePublish == null) {
            listOf(
                author, year.toString(), album, "%3d".format(track)
            ).joinToString(" - ")
        } else
        {
            "%15d".format(dateTimePublish.time)
        }
    }

    override fun compareTo(other: SettingsDTO): Int {
        return sortString.compareTo(other.sortString)
    }

    fun toDtoDigest(): SettingsDTOdigest {
        return SettingsDTOdigest(
                id = id,
                idPrevious = idPrevious,
                idNext = idNext,
                idLeft = idLeft,
                idRight = idRight,
                status = status,
                tags = tags,
                color = color,
                songName = songName,
                songNameCensored = songNameCensored,
                author = author,
                album = album,
                date = date,
                time = time,
                timecode = timecode,
                ms = ms,
                dateTimePublish = dateTimePublish,
                year = year,
                track = track,
                countVoices = countVoices,
                firstSongInAlbum = firstSongInAlbum,
                flagBoosty = flagBoosty,
                flagSponsr = flagSponsr,
                flagVk = flagVk,
                flagDzenLyrics = flagDzenLyrics,
                flagDzenKaraoke = flagDzenKaraoke,
                flagDzenChords = flagDzenChords,
                flagDzenMelody = flagDzenMelody,
                flagVkLyrics = flagVkLyrics,
                flagVkKaraoke = flagVkKaraoke,
                flagVkChords = flagVkChords,
                flagVkMelody = flagVkMelody,
                flagTelegramLyrics = flagTelegramLyrics,
                flagTelegramKaraoke = flagTelegramKaraoke,
                flagTelegramChords = flagTelegramChords,
                flagTelegramMelody = flagTelegramMelody,
                flagPlLyrics = flagPlLyrics,
                flagPlKaraoke = flagPlKaraoke,
                flagPlChords = flagPlChords,
                flagPlMelody = flagPlMelody,
                processColorBoosty = processColorBoosty,
                processColorSponsr = processColorSponsr,
                processColorVk = processColorVk,
                processColorMeltLyrics = processColorMeltLyrics,
                processColorMeltKaraoke = processColorMeltKaraoke,
                processColorMeltChords = processColorMeltChords,
                processColorMeltMelody = processColorMeltMelody,
                processColorDzenLyrics = processColorDzenLyrics,
                processColorDzenKaraoke = processColorDzenKaraoke,
                processColorDzenChords = processColorDzenChords,
                processColorDzenMelody = processColorDzenMelody,
                processColorVkLyrics = processColorVkLyrics,
                processColorVkKaraoke = processColorVkKaraoke,
                processColorVkChords = processColorVkChords,
                processColorVkMelody = processColorVkMelody,
                processColorTelegramLyrics = processColorTelegramLyrics,
                processColorTelegramKaraoke = processColorTelegramKaraoke,
                processColorTelegramChords = processColorTelegramChords,
                processColorTelegramMelody = processColorTelegramMelody,
                processColorPlLyrics = processColorPlLyrics,
                processColorPlKaraoke = processColorPlKaraoke,
                processColorPlChords = processColorPlChords,
                processColorPlMelody = processColorPlMelody,
                resultVersion = resultVersion,
                versionBoosty = versionBoosty,
                versionBoostyFiles = versionBoostyFiles,
                versionSponsr = versionSponsr,
                versionDzenKaraoke = versionDzenKaraoke,
                versionDzenLyrics = versionDzenLyrics,
                versionDzenChords = versionDzenChords,
                versionDzenMelody = versionDzenMelody,
                versionVkKaraoke = versionVkKaraoke,
                versionVkLyrics = versionVkLyrics,
                versionVkChords = versionVkChords,
                versionVkMelody = versionVkMelody,
                versionTelegramKaraoke = versionTelegramKaraoke,
                versionTelegramLyrics = versionTelegramLyrics,
                versionTelegramChords = versionTelegramChords,
                versionTelegramMelody = versionTelegramMelody,
                versionPlKaraoke = versionPlKaraoke,
                versionPlLyrics = versionPlLyrics,
                versionPlChords = versionPlChords,
                versionPlMelody = versionPlMelody,
                rate = rate
        )
    }
}