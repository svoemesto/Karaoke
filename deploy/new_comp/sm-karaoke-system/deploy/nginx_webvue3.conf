user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;

  server {
      listen       7906;
      client_max_body_size 1024m;
      server_name  localhost;

      location = /nginx-test {
          return 200 "Nginx Test Hit!\n";
      }

      # --- Проксируем /.well-known на бэкенд ---
      location /.well-known/ {
          proxy_pass http://karaoke-app:8899; # Используем имя сервиса
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      # --- Проксируем /oauth2/ на бэкенд ---
      location /oauth2/ {
          proxy_pass http://karaoke-app:8899; # Используем имя сервиса
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      # --- Проксируем /api/ на бэкенд ---
      location /api {
          expires -1;
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          proxy_pass http://karaoke-app:8899; # Используем имя сервиса
          proxy_set_header X-Forwarded-For-Client $proxy_add_x_forwarded_for;
      }

      # --- Обслуживаем статические файлы (CSS, JS, изображения и т.д.) ---
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
          root /app;
          expires 1y;
          add_header Cache-Control "public, immutable";
      }

      # --- Для остальных запросов обслуживаем Vue SPA ---
      location / {
          root   /app;
          # Если файл/директория не найдена (и не совпала с предыдущими location),
          # вернуть index.html для обработки маршрутов Vue Router
          try_files /index.html =404;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
  }
}
